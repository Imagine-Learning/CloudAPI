FORMAT: 1A

# Imagine Learning Cloud API v1

# Group Overview

## Requests

### Base URL

All URLs referenced in the API documentation begin with the following base URL:

| SERVER             | URL    
|:-------------------|:---------------------------------------------------------------------------------|
|Documentation Mock Server | http://imaginelearningcloudapiv1.apiary-mock.com |
|Manager Release Server    | https://manager.my.imaginelearning.com           |
|Sequencer Release Server  | https://sequencer.my.imaginelearning.com         |

### Allowed HTTPs requests:

* POST   :   To create a resource, or to call specific non-resource actions
* GET    :   Get a resource or list of resources
* DELETE :   To delete resource
* PATCH  :   To update a resource
    
######NOTE: For clients that do not support DELETE or PATCH HTTP methods, use POST with additional http header:  
`X-HTTP-Method-Override: DELETE` or  
`X-HTTP-Method-Override: PATCH`


### Resource Format
The Imagine Learning REST API currently only supports JSON resource requests and representations.  Please let us know if you need another format.

## Responses

Each response from the Imagine Learning Cloud API contains:

| ITEM               | DESCRIPTION    
|:-------------------|:---------------------------------------------------------------------------------|
| HTTP Status Code   | The code indicates general success or failure of the request - see details below
| HTTP Headers       | Various response headers are set relevant to the particular request.
| Response Body      | Successful requests contain the an entity resource representation, while failed requests show an error representation.

### HTTP Response Codes used

- 200 `OK` - the request was successful.  The Response body contains entity resource data.
- 201 `Created` - the request was successful and a resource was created.
- 204 `No Content` - the request was successful, but there is no content to return
- 304 `Not Modified` - the resource has not been modied and therefore not retured (used with request headers If-Modified-Since or If-Match).
- 400 `Bad Request` - the request could not be understood or was missing required parameters.
- 401 `Unauthorized` - authentication failed (missing or invalid authentication token).
- 403 `Forbidden` - authentication failed (account does not access to a resource or operation).
- 404 `Not Found` - resource was not found.
- 500 `Internal Server Error` - an unexpected error or condition was encountered.
- 503 `Service Unavailable` - We are temporarily unable to service the request. Please wait for a bit and try again.

```
HTTP/1.1 500 Internal Server Error
Cache-Control: no-cache
Pragma: no-cache
Content-Length: 468
Content-Type: application/json;charset=UTF-8
Expires: -1
Server: Microsoft-IIS/8.0
X-Powered-By: ASP.NET
Date: Tue, 08 Apr 2014 19:53:41 GMT

{
  "metadata":
  {
    "errorMsg" : "An unhandled exception occured: <details>"
  }
}
```

### Response Content
Responses typically contain up to 3 sections:

* `metadata` - this section contains any metadata about the response or resource being returned
* `<resource name>` - this section is the resource that was requested
* `notifications` - this section contains notifications of changes that the client may want to reflect in the UI

######TODO: Add full example with metadata, resource and notifications

# Group Authentication

This is an authenticated API which uses [Client Credentials Grant](http://tools.ietf.org/html/rfc6749#section-4.4) flow of the [OAuth2](http://tools.ietf.org/html/rfc6749) specification as the authentication mechanism.

To use this API:

- An application makes a request to the POST /api/token endpoint to exchange credentials for a bearer token.
- When accessing the REST API, the application uses the bearer token to authenticate.


#Client Credentials Grant authorization
##Tokens are passwords
Keep in mind that the bearer token itself grants access to make requests on behalf of an application. These values should be considered as sensitive as passwords and must not be shared or distributed to untrusted parties.

##SSL absolutely required
To ensure student privacy and to fulfill legal obligations under [FERPA](http://www.wrightslaw.com/info/ferpa.index.htm), all requests (both to obtain and use tokens) must use HTTPS endpoints




##Step 1: Obtain a bearer token

Credentials must be exchanged for a bearer token by issuing a request to POST api/token:

- The request must be a `HTTP POST` request.
- The body of the request must be `grant_type=password&username=XXX&password=YYY&client_id=ZZZZ[&client_secret=SSSS]`.

######Example request (Authorization header has been wrapped):

```
POST /token HTTP/1.1
Host: api.imaginelearning.com
User-Agent: Imagine Learning Unity Player
Content-Type: application/x-www-form-urlencoded;charset=UTF-8
Content-Length: 67

grant_type=password&username=demo@imaginelearning.com&password=demo&client_id=SomeClient&client_secret=MySecret
```

If the request was formatted correctly, the server will respond with a JSON-encoded payload:

######Example response (access_token has been wrapped):

```
HTTP/1.1 200 OK
Cache-Control: no-cache
Pragma: no-cache
Content-Length: 468
Content-Type: application/json;charset=UTF-8
Expires: -1
Server: Microsoft-IIS/8.0
X-Powered-By: ASP.NET
Date: Tue, 08 Apr 2014 19:53:41 GMT

{
  "access_token":"rDdBkKmtpFiYUoKlZF-LqH4qkyQM_ZywDHqF1IcViinRZg795x9aROHEwM2qlvqXPurtqRcb8GQXtx3npLUXg0ZNuBEf24HgMwNw2h6jqzbVAYc-BqukZvQ78_NaMkOzowAAzJxc9UhZ0BVWlYgNKzrMtpI_NVihRDdlygCV8GxSYL-NnVpjEOc8FxtN2m23JgOCcJIUSyUPs6WvP-buDdPO-oy9iFIMI4wk4eMdNqgRFoFLg-XFhB-S_dAqLi1Cr2_4PDgbkuHrOgUHdwXHsvolzTMC7NGTRQp0LYFLt3CZMxjBVOKEj8AxyVKR_4zO4oc4ta9dO0SKdEh4i-vEMw",
  "token_type":"bearer",
  "expires_in":1209599,
  "username":"demo@imaginelearning.com",
  "role":"Student",
  "displayname":"Demo User"
}
```

Applications should verify that the value associated with the `token_type` key of the returned object is `bearer`. The value associated with the access_token key is the bearer token.

Note that one bearer token is valid for an application at a time. Issuing another request with the same credentials to /token will return the same token until it is invalidated.

##Step 2: Authenticate API requests with the bearer token

The bearer token may be used to issue requests to the REST API endpoints. To use the bearer token, construct a normal HTTPS request and include an `Authorization` header with the value of 
`Bearer <base64 access_token value from step 1 response>` . Signing is not required.

######Example request:
```
GET <some api> HTTP/1.1
Host: api.imaginelearning.com
User-Agent: Imagine Learning Unity Player
Content-Type: application/x-www-form-urlencoded;charset=UTF-8
Authorization: bearer rDdBkKmtpFiYUoKlZF-LqH4qkyQM_ZywDHqF1IcViinRZg795x9aROHEwM2qlvqXPurtqRcb8GQXtx3npLUXg0ZNuBEf24HgMwNw2h6jqzbVAYc-BqukZvQ78_NaMkOzowAAzJxc9UhZ0BVWlYgNKzrMtpI_NVihRDdlygCV8GxSYL-NnVpjEOc8FxtN2m23JgOCcJIUSyUPs6WvP-buDdPO-oy9iFIMI4wk4eMdNqgRFoFLg-XFhB-S_dAqLi1Cr2_4PDgbkuHrOgUHdwXHsvolzTMC7NGTRQp0LYFLt3CZMxjBVOKEj8AxyVKR_4zO4oc4ta9dO0SKdEh4i-vEMw
```
  
  
## Token [/token]

### Get Authentication Token [POST]

This resource has the following attributes

- `username` The name of the user (in email format) or student [Note: student usernames are specified as 'AuthenticationDomain!Username']
- `password` The password of the user or student 

+ Request (application/json)

        { 
          "username": "useremail@example.com", 
          "password": "userspassword" 
        }

+ Response 200 (application/json)
    
        {
          "access_token":"Base64EncodedToken",
          "token_type":"bearer",
          "expires_in":1209599,
          "username": "useremail@example.com",
          "password": "userspassword"
        }

+ Response 403 (application/json)

        {
          "message" : "The credentials entered are not valid"
        }  

# Group Password Reset
The API enables sending a password reset email to a user with a link to click on to reset their 
password (in case they have forgotten it). 

## Initiate Password Reset [/passwordReset]
This initiates the process of sending an email to the user with a link for them to click on. 

### Request a password reset [POST]


+ Request (application/json)

        {
            "username": "forgetful@imaginelearning.com"
        }

+ Response 202

+ Response 404

+ Response 500 

        {
            "message": "Unable to reach SMTP server"
        }

## Complete Password Reset [/passwordReset/{id}]
Once the user clicks the link in the email, they'll end up on a landing page where they can type in a new password.
The UI can validate the link is valid, and set the new password.
### Validate a password reset request [GET]

+ Parameters
    + id (string) ... request id

+ Request (application/json)

        {
            "username": "forgetful@imaginelearning.com"
        }

+ Response 200


+ Response 404

        {
            "message": "password reset request id is invalid"
        }

### Change the password [POST]

+ Parameters
    + id (string) ... request id

+ Request (application/json)

        {
            "password": "Tr0ub4dor&3"
        }

+ Response 200

+ Response 404

        {
            "message": "password reset request id is invalid"
        }

+ Response 400

        {
            "message": "password must be at least 8 characters"
        }

# Group Product Metadata

## Product [/products]

A product resource represents a sequenced product that can be played.

### Get products [GET]

+ Response 200 (application/json)

        {
            [
                { "identifier": "ILE" },
                { "identifier": "Spanish" },
                { "identifier": "Test" },
                { "identifier": "CommunicationTest" }
            ]
        }

## SupportedActivity [/supportedactivities]

A "supported activity" resource has the following attributes:

- identifier: the string used to identify the activity ("ExploreEverydayWords" for example).  This is not to be confused with legacy integer/guid identifiers.

### Retrieve supported activities [GET]

+ Response 200 (application/json)

        {
            [
                { "identifier": "ActivityMenuLevel1" },
                { "identifier": "ActivityMenuLevel2" },
                { "identifier": "AdaptiveAssessment" },
                { "identifier": "AffixAction" }
            ]
        }

## SupportedDataset [/supporteddatasets{?activityIdentifier}]

A "supported dataset" resource has the following attributes:

- activityIdentifier: the string used to identify the activity ("ExploreEverydayWords" for example).  This is not to be confused with legacy integer/guid identifiers.
- supportedDatasets: list of the supported datasets where datasetNumber is the dataset number (1,10, 1000, etc. - this is not the same as the legacy numeric identifier, it's the user-friendly number) and datasetName is the friendly dataset set that originates in the ImagineMedia database.

### Retrieve supported datasets [GET]
+ Parameters
    + activityIdentifier = `none` (optional, string)...Returns datasets for only the specified activity
    
+ Response 200 (application/json)

        {
            [
                {
                    "activityIdentifer":"ListenToAStory",
                    "supportedDatasets":
                    [
                        {"datasetNumber":1, "datasetName": "Story 1: Moving"},
                        {"datasetNumber":2, "datasetName": "Story 2: No, No, Baby Sue!"}
                    ]
                }
                {
                    "Activity":"LetterShapesAndSounds",
                    "SupportedDatasets":
                    [
                        {"DatasetNumber":1, "datasetName": "Capital A"},
                        {"DatasetNumber":2, "datasetName": "Capital M"}
                    ]
                }
            ]
        }

# Group Provisioning

## Student [/students/{id}{?details}]

A Student resource has the following attributes: 

- `id` (string): Unique Student identifier [Assigned by API when Student is created]
- `username` (string): Unique name used to login (must be unique within an authentication domain)
- `password` (string): Password (minimum 4 characters)
- `firstName` (string): First Name
- `lastName` (string): Last Name
- `gradeLevel` (string): Grade Level: PreK, Kinderton, First-Twelfth, Other
- `firstLanguage`(string): Oral first language
- `writtenLanguage` (string): Written language used at home
- `studentNumber` (string): Unique district or school id for Student.  [OPTIONAL]
- `syncId` (string): Id used in syncing with SIS [OPTIONAL]
- `sessionTime` (number): Session Time for this student [OPTIONAL]
- `realm` (string): Realm for Single Sign On [OPTIONAL]
- `ssoid` (string): Single Sign On identifier [OPTIONAL]
- `preventFromRunningSessions` (bool): Set if student is no longer licensed [OPTIONAL]

+ Model (application/hal+json)

        {
          "metadata": {},
          "student":
          {
            "id": "4176a86d-5ef3-4898-a350-8b80ddc09a49",
            "username": "demostudent@imaginelearning.com",
            "password": "1234",
            "firstName": "Madyson",
            "lastName": "Cram",
            "gender" : "Male",
            "gradeLevel": "Second",
            "firstLanguage": "English",
            "writtenLanguage": "English",
            "studentNumber": "",
            "syncId": "",
            "sessionTime" : 30
          }
          "notifications": {}
        }

### Retrieve a Single Student [GET]
+ Parameters
    + id (string) ... Student Id.
    + details = `false` (optional, bool,   `false`)...Return extra details of student (groups and organizations)

+ Response 200
    
    [Student][]

### Edit a Student [PATCH]
To update a Student send a Patch Request with updated value(s) for one or more of the Student resource attributes. All attributes values (properties) from the previous version are carried over by default if not specified.

+ Request (application/json)

        {
          "attribute_name": "Updated attribute contents"
        }

+ Response 200
    
    [Student][]

### Edit a Student [PUT]
To update a Student send a Put Request with updated value(s) for each of the Student resource attributes. All attributes values (properties) are updated.

+ Response 200
    
        {
          "notifications": {}
        }

### Delete a Student [DELETE]
NOTE: Students should normally be archived, not deleted. Only the root user is authorized to delete a Student. We normally want to keep student data around forever. Typically, only a use case for cleaning up test data would call for deleting a Student.

+ Response 204

## Student's Organizations Collection [/students/{id}/organizations{?offset,limit,sortby,desc,details}]

This resource represents the list of organizations for the specified student

### Retrieve Organizations for a specified Student [GET]

+ Parameters
    + id (string) ... Id of the Student
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of organization (groups, organizations, students, users)

+ Response 200 (application/json)

        {
          "metadata": {},
          "organizations":
          {
            [{
              "id": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "organizationType" : "District",
              "name": "Imagine Learning School District",
              "address": "191 River Park Dr.",
              "city": "Provo",
              "state": "Utah",
              "zip": "84604",
              "country": "USA",
              "parentId": "00000000-0000-0000-0000-000000000000",
              "licenseCap": 100,
              "organizationNumber": "",
              "syncId": "",
              "sessionTime": 30
            }, {
              "id": "6f587521-1dd4-431d-ad91-4c27c5f32776",
              "organizationType" : "School",
              "name": "Anderton Academy",
              "address": "1100 Samson Trl",
              "city": "McCall",
              "state": "Idaho",
              "zip": "83638",
              "country": "USA",
              "parentId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "licenseCap": 50,
              "organizationNumber": "",
              "syncId": "",
              "sessionTime": 25
            }
          }
          "notifications": {}
        } 

## Set Student's Organizations Collection [/students/{studentId}/orgs]

This resource allows to edit student's organization collection

### Set Student's Groups [PUT]
The operation adds the student to the specified organizations and removes him from all other organizations he belonged to. An array of desired organization Ids should be sent with the Put request.
+ Parameters
    + studentId (string) ... Id of the Student
+ Response 204

## Student's Groups Collection [/students/{id}/groups{?offset,limit,sortby,desc,details}]

This resource represents the list of groups for the specified student

### Retrieve Groups for specified Student [GET]

+ Parameters
    + id (string) ... Id of the Student
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Username` (optional, string, `Username`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of group (contained students and owning users)

+ Response 200 (application/json)

        {
          "metadata": {},
          "groups":
          {
            [{
              "id": "5687fc7a-dccc-45b7-8be5-bf9533e37af3",
              "name": "First Grade",
              "groupType": "ILE",
              "printOption": "All",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }, {
              "id": "0a0b13c0-8315-43f3-bc5a-033d0dd340ac",
              "name": "After School",
              "groupType": "ILS",
              "printOption": "Partial",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }
        

### Set Student's Groups [PUT]
The operation adds the student to the specified groups and removes him from all other groups he belonged to. If the new groups belong to different organizations than the ones the student belonged to, the student's organizations are changed accordingly. An array of desired group Ids should be sent with the Put request.
+ Parameters
    + id (string) ... Id of the Student
+ Response 204


## Students Collection [/students{?offset,limit,sortby,desc,details,username,gradelevel,firstname,lastname,search,includearchived}]

This resource is the collection of all students that the authenticated user has rights to.

### List all Students [GET]
+ Parameters
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve. If set to -1 returns all available results.
    + sortby = `Username` (optional, string, `Username`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of student (groups and organizations)
    + username = `` (optional, string, ``)...Filter results by exact match on `Username` field
    + gradelevel = `` (optional, string, ``)...Filter results by exact match on `GradeLevel` field
    + firstname = `` (optional, string, ``)...Filter results by exact match on `FirstName` field
    + lastname = `` (optional, string, ``)...Filter results by exact match on `LastName` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `FirstName`, `LastName`, or `Username` fields.
      Multiple search terms may be separated by spaces.
    + includearchived = `false` (optional, bool, `false`)...Return archived students in the results (must be an ILAdmin)
    + Ids = `does not exist` (optional, list[string], ``)...HEADER, if set returns only items specified by the id's in the list.

+ Response 200 (application/json)

        {
          "metadata": {},
          "students":
          {
            [{
              "id": "4176a86d-5ef3-4898-a350-8b80ddc09a49",
              "username": "demostudent@imaginelearning.com",
              "password": "1234",
              "firstName": "Madyson",
              "lastName": "Cram",
              "gender": "Male",
              "gradeLevel": "Second",
              "firstLanguage": "English",
              "writtenLanguage": "English",
              "studentNumber": "",
              "syncId": "",
              "sessionTime": 30
            }, {
              "id": "3a617f40-4748-4c32-a8c3-5d6282c6842c",
              "username": "demostudent2@imaginelearning.com",
              "password": "5678",
              "firstName": "Matt",
              "lastName": "Lund",
              "gender": "Male",
              "gradeLevel": "PreK",
              "firstLanguage": "Mandarin",
              "writtenLanguage": "Chinese Simplified",                
              "studentNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }
        
## Direct Students Collection [/students/mine{?offset,limit,sortby,desc,details,username,gradelevel,firstname,lastname,search,includearchived}]

This resource is the collection of all students that are in the groups that user belongs to.

### List all direct Students [GET]
+ Parameters
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve. If set to -1 returns all available results.
    + sortby = `Username` (optional, string, `Username`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of student (groups and organizations)
    + username = `` (optional, string, ``)...Filter results by exact match on `Username` field
    + gradelevel = `` (optional, string, ``)...Filter results by exact match on `GradeLevel` field
    + firstname = `` (optional, string, ``)...Filter results by exact match on `FirstName` field
    + lastname = `` (optional, string, ``)...Filter results by exact match on `LastName` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `FirstName`, `LastName`, or `Username` fields.
      Multiple search terms may be separated by spaces.
    + includearchived = `false` (optional, bool, `false`)...Return archived students in the results (must be an ILAdmin)

+ Response 200 (application/json)

        {
          "metadata": {},
          "students":
          {
            [{
              "id": "4176a86d-5ef3-4898-a350-8b80ddc09a49",
              "username": "demostudent@imaginelearning.com",
              "password": "1234",
              "firstName": "Madyson",
              "lastName": "Cram",
              "gender": "Male",
              "gradeLevel": "Second",
              "firstLanguage": "English",
              "writtenLanguage": "English",
              "studentNumber": "",
              "syncId": "",
              "sessionTime": 30
            }, {
              "id": "3a617f40-4748-4c32-a8c3-5d6282c6842c",
              "username": "demostudent2@imaginelearning.com",
              "password": "5678",
              "firstName": "Matt",
              "lastName": "Lund",
              "gender": "Male",
              "gradeLevel": "PreK",
              "firstLanguage": "Mandarin",
              "writtenLanguage": "Chinese Simplified",                
              "studentNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }


### Create student [POST]

| property               | type    | required | default | notes
|:-----------------------|:-------:|:---:|:-----:|:-----------------------------------------------|
| username               | string  | Yes |       | Must be unique within the authentication domain of the organization
| password               | string  | Yes |       | Length 8-256 characters
| firstName              | string  | Yes |       | Length 1-32 characters
| lastName               | string  | Yes |       | Length 1-32 characters
| gender                 | string  | Yes |       | Valid values: "Male", "Female"
| gradeLevel             | string  | Yes |       | Valid values: "PreK", "Kindergarten", "First"-"Twelfth", "Other"
| firstLanguage          | number  | Yes |       | Call GET /OralLanguages for valid values
| writtenLanguage        | number  | Yes |       | Call GET /WrittenLanguages for valid values
| organizationId         | string  | Yes |       | Valid organizationId
| studentNumber          | string  | No  | null  | Length 1-64 characters
| syncId                 | string  | No  | null  | Length 1-64 characters
| sessionTime            | number  | No  |       | Session Time (in minutes)


+ Request (application/json)

        {
          "username" : "demostudent@imaginelearning.com",
          "password" : "demopassword",
          "firstName": "Madyson",
          "lastName" : "Cram",
          "gender": "Female",
          "gradeLevel": "Second",
          "firstLanguage" : "English",
          "writtenLanguage": "English",
          "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc"
        }
        
+ Response 201

    [Student][]

+ Response 409
        
        {
          "message" : "The Student username already exists"
        }


## User [/users/{id}{?details}]

A User resource has the following attributes: 

- `id` (string) Unique User identifier [Assigned by API when User is created]
- `username` (string) Unique name used to login (email address)
- `firstName` (string) First Name
- `lastName` (string) Last Name
- `userType` (string) Type of user. Valid values: "Admin", "Teacher"
- `language` (string) Language.  
- `userNumber` (string) Unique district or school id for User.  [OPTIONAL]
- `syncId` (string) Id used in syncing with SIS [OPTIONAL]


+ Parameters
    + id (string) ... User Id.

+ Model (application/hal+json)

        {
          "metadata": {},
          "user":
          {
            "id": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
            "username": "demouser@imaginelearning.com",
            "firstName": "Susan",
            "lastName": "Preator",
            "userType": "Teacher",
            "language": "English",
            "userNumber": "",
            "syncId": ""
          }
          "notifications": {}
        }

### Retrieve a Single User [GET]
+ Parameters
    + id (string) ... User Id.
    + details = `false` (optional, bool,   `false`)...Return extra details of user (groups and organizations)

+ Response 200
    
    [User][]

### Edit a User [PATCH]
To update a User send a Patch Request with updated value(s) for one or more of the User resource attributes. All attributes values (properties) from the previous version are carried over by default if not specified.

+ Request (application/json)

        {
          "attribute_name": "Updated attribute contents"
        }

+ Response 200
    
    [User][]

### Edit a User [PUT]
To update a User send a Put Request with updated value(s) for each of the User resource attributes. All attributes values (properties) are updated.

+ Request (application/json)

        {
          "attribute_name": "Updated attribute contents"
        }

+ Response 200
    
        {
          "notifications": {}
        }

### Delete a User [DELETE]
+ Response 200 (application/json)

        {
          "notifications": {}
        }
        
## User's Organizations Collection [/users/{id}/organizations{?offset,limit,sortby,desc,details,includearchived}]

This resource represents the list of organizations for the specified user

### Retrieve Organizations for a specified User [GET]

+ Parameters
    + id (string) ... Id of the User
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of organization (groups, organizations, students, users)
    + includearchived = `false` (optional, bool, `false`)...Return archived organizations in the results (must be an ILAdmin)

+ Response 200 (application/json)

        {
          "metadata": {},
          "organizations":
          {
            [{
              "id": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "organizationType" : "District",
              "name": "Imagine Learning School District",
              "address": "191 River Park Dr.",
              "city": "Provo",
              "state": "Utah",
              "zip": "84604",
              "country": "USA",
              "parentId": "00000000-0000-0000-0000-000000000000",
              "licenseCap": 100,
              "organizationNumber": "",
              "syncId", ""
            }, {
              "id": "6f587521-1dd4-431d-ad91-4c27c5f32776",
              "organizationType" : "School",
              "name": "Anderton Academy",
              "address": "1100 Samson Trl",
              "city": "McCall",
              "state": "Idaho",
              "zip": "83638",
              "country": "USA",
              "parentId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "licenseCap": 50,
              "organizationNumber": "",
              "syncId", ""
            }
          }
          "notifications": {}
        }    
        
## Set User's Organizations Collection [/users/{userId}/orgs]

This resource allows to edit users's organization collection

### Set Student's Groups [PUT]
The operation adds the user to the specified organizations and removes him from all other organizations he belonged to. An array of desired organization Ids should be sent with the Put request.
+ Parameters
    + userId (string) ... Id of the User
+ Response 204

## User's Groups Collection [/users/{id}/groups{?limit,offset,sortby,desc,details}]

This resource represents the list of groups for the specified user

### Retrieve Groups for a specified User [GET]

+ Parameters
    + id (string) ... Id of the User
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of group (contained students and owning users)

+ Response 200 (application/json)

        {
          "metadata": {},
          "groups":
          {
            [{
              "id": "5687fc7a-dccc-45b7-8be5-bf9533e37af3",
              "name": "First Grade",
              "groupType": "ILE",
              "printOption": "All",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }, {
              "id": "0a0b13c0-8315-43f3-bc5a-033d0dd340ac",
              "name": "After School",
              "groupType": "ILS",
              "printOption": "Partial",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }

### Set Users's Groups [PUT]
The operation adds the user to the specified groups and removes him from all other groups he belonged to. If the new groups belong to different organizations than the ones the user belonged to, the users's organizations are changed accordingly. An array of desired group Ids should be sent with the Put request.
+ Parameters
    + id (string) ... Id of the User
+ Response 204

## User's Students Collection [/users/{id}/students{?limit,offset,sortby,desc,details,includearchived}]

### Retrieve all Students under the specified User's scope of influence [GET]
+ Parameters
    + id (string) ... Id of the User
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of group (contained students and owning users)
    + includearchived = `false` (optional, bool, `false`)...Return archived students in the results (must be an ILAdmin)

+ Response 200 (application/json)

        {
          "metadata": {},
          "students":
          {
            [{
              "id": "4176a86d-5ef3-4898-a350-8b80ddc09a49",
              "username": "demostudent@imaginelearning.com",
              "password": "1234",
              "firstName": "Madyson",
              "lastName": "Cram",
              "gender": "Male",
              "gradeLevel": "Second",
              "firstLanguage": "English",
              "writtenLanguage": "English",
              "studentNumber": "",
              "syncId": "",
              "sessionTime": 30
            }, {
              "id": "3a617f40-4748-4c32-a8c3-5d6282c6842c",
              "username": "demostudent2@imaginelearning.com",
              "password": "5678",
              "firstName": "Matt",
              "lastName": "Lund",
              "gender": "Male",
              "gradeLevel": "PreK",
              "firstLanguage": "Mandarin",
              "writtenLanguage": "Chinese Simplified",                
              "studentNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }

### Retrieve headers including X-Total-Count of Students under the specified User's scope of influence [HEAD]
+ Parameters
    + id (string) ... Id of the User
+ Response 200 (application/json)

## User's Assigned Students Collection [/users/{id}/assignedstudents{?limit,offset,sortby,desc,details,includearchived}]

### Retrieve Students assigned directly to the specified User [GET]
+ Parameters
    + id (string) ... Id of the User
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of group (contained students and owning users)
    + includearchived = `false` (optional, bool, `false`)...Return archived students in the results (must be an ILAdmin)

+ Response 200 (application/json)

        {
          "metadata": {},
          "students":
          {
            [{
              "id": "4176a86d-5ef3-4898-a350-8b80ddc09a49",
              "username": "demostudent@imaginelearning.com",
              "password": "1234",
              "firstName": "Madyson",
              "lastName": "Cram",
              "gender": "Male",
              "gradeLevel": "Second",
              "firstLanguage": "English",
              "writtenLanguage": "English",
              "studentNumber": "",
              "syncId": "",
              "sessionTime": 30
            }, {
              "id": "3a617f40-4748-4c32-a8c3-5d6282c6842c",
              "username": "demostudent2@imaginelearning.com",
              "password": "5678",
              "firstName": "Matt",
              "lastName": "Lund",
              "gender": "Male",
              "gradeLevel": "PreK",
              "firstLanguage": "Mandarin",
              "writtenLanguage": "Chinese Simplified",                
              "studentNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }

### Retrieve headers including X-Total-Count of Students under the specified User's scope of influence [HEAD]
+ Parameters
    + id (string) ... Id of the User
+ Response 200 (application/json)

## Users Collection [/users{?offset,limit,sortby,desc,details,username,firstname,lastname,search}]

This resource is the collection of all users

### List all Users [GET]

+ Parameters
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve. If set to -1 returns all available results.
    + sortby = `Username` (optional, string, `Username`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of user (groups and organizations)
    + username = `` (optional, string, ``)...Filter results by exact match on `Username` field
    + firstname = `` (optional, string, ``)...Filter results by exact match on `FirstName` field
    + lastname = `` (optional, string, ``)...Filter results by exact match on `LastName` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `FirstName`, `LastName`, or `Username` fields.
      Multiple search terms may be separated by spaces.
    + Ids = `does not exist` (optional, list[string], ``)...HEADER, if set returns only items specified by the id's in the list.

+ Response 200 (application/json)

        {
          "metadata": {},
          "users":
          {
            [{
              "id": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "username": "demouser@imaginelearning.com",
              "firstName": "Susan",
              "lastName": "Preator",
              "userType": "Admin",
              "language": "English",
              "userNumber": "",
              "syncId": ""
            }, {
              "id": "fe33418b-099f-49bf-97c0-85468a791084",
              "username": "demouser@imaginelearning.com",
              "firstName": "Clydie",
              "lastName": "Wakefield",
              "userType": "Teacher"
              "language": "Chinese Traditional",
              "userNumber": "",
              "syncId": ""            
            }
          }
          "notifications": {}
        }


### Create user [POST]

| property               | type    | required | default | notes
|:-----------------------|:-------:|:---:|:-----:|:-----------------------------------------------|
| username               | string  | Yes |       | Must be unique and in email format, Length 3-128 characters
| password               | string  | Yes |       | Length 8-256 characters
| firstName              | string  | Yes |       | Length 1-32 characters
| lastName               | string  | Yes |       | Length 1-32 characters
| userType               | string  | Yes |       | Valid values: "Admin", "Teacher"
| language               | string  | Yes |       | Call GET /WrittenLanguages for valid values
| organizationId         | string  | Yes |       | Valid organizationId for initial membership
| userNumber             | string  | No  |       | Length 1-64 characters
| syncId                 | string  | No  |       | Length 1-64 characters

+ Request (application/json)

        {
          "username" : "demouser@imaginelearning.com",
          "password": "demopassword",
          "firstName": "Susan",
          "lastName" : "Preator",
          "userType" : "Teacher",
          "language" : "English",
          "organizationId" : "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
          "userNumber" : "12345"
        }
        
+ Response 201

    [User][]

+ Response 409
        
        {
          "message" : "The User username already exists"
        }


## Organization [/organizations/{id}{?details}]

An Organization reprents a school, district, sub-district, or similar grouping.   The resource has the following attributes: 

- `id` (string) Unique Organization identifier [Assigned by API when User is created]
- `name` (string) Name of the Organization
- `organizationType` (string) Type of Organization
- `parentId` (string) Id of the parent organization of this organization
- `licenseCap` (number) Number of licenses organization is limited to [OPTIONAL - ommission indicates no cap on licenses]
- `organizationNumber` (string) Unique state/district id for Organization.
- `syncId` (string) Id used in syncing with SIS
- `authenticationSiteCode` (string) Students' authentication and searching stops at this organization.
- `netSuiteId` (string) Id used in syncing with NetSuite
- `archived` (bool) Organization has been archived
- `preventNewStudentSessions` (bool) Prevent any students who have not logged in before from running (due to license abuse)
- `usageGoal` (??)
- `yearlyGoalInHours` (??)
- `mergedUsageGoals` (??)
- `mergedYearlyGoalsInHours` (??)
- `schoolYearSessions` (??)
- `restrictStudentAccessTime` (json) Only allow students to login during this time range (24 hour clock, IANA timezone list: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones)

+ Model (application/hal+json)

        {
          "metadata": {},
          "organization":
          {
            "id": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
            "organizationType" : "School",
            "name": "Imagine Learning Academy",
            "parentId": "00000000-0000-0000-0000-000000000000",
            "licenseCap": 50,
            "organizationNumber": "",
            "syncId", ""
            "restrictStudentAccessTime": {
                "start": "8:00",
                "end":"15:00",
                "timezone":"US/Mountain"
            }
          }
          "notifications": {}
        }

### Retrieve a Single Organization [GET]
+ Parameters
    + id (string) ... Organization Id.
    + details = `false` (optional, bool,   `false`)...Return extra details of organization (groups, organizations, students, users)

+ Response 200
    
    [Organization][]

### Edit an Organization [PATCH]
To update an Organization send a Patch Request with updated value(s) for one or more of the Student resource attributes. All attributes values (properties) from the previous version are carried over by default if not specified.

+ Request (application/json)

        {
          "attribute_name": "Updated attribute contents"
        }

+ Response 200
    
    [Organization][]

### Edit an Organization [PUT]
To update an Organization send a Put Request with updated value(s) for each of the Organization resource attributes. All attributes values (properties) are updated.

+ Response 200
    
        {
          "notifications": {}
        }

### Delete an Organization [DELETE]
Only an ILAdmin is allowed to delete an organization.  Other users may call archive on an organization.
+ Response 200 (application/json)

        {
          "notifications": {}
        }

## Retrieve an Organization's Usage Goals [/organizations/{id}/usagegoals]
### Retrieve an Organization's Usage Goals [GET]
Returns the current goal set for an organization (may be 0 to indicate that the inherited goal should be used),
and the inherited goal value (which is not used when the current goal value is set).
Note that the usage goal for the root organization is considered the "recommended" usage goal for all organizations.
+ Response 200 (application/json)

        {
          "CurrentUsageGoal": { "Date": "2015-04-24T21:18:05.676Z", "Goal": 111 },
          "InheritedUsageGoal": { "Date": "2014-09-01T00:00:00Z", "Goal": 100 }
        }

## Archive an Organization [/organizations/{id}/archive]
### Archive an Organization [PUT]
To archive an Organization send a Put Request with the Organization Id.  Authenticated user must be an ILAdmin.

+ Response 200
    
        {
          "notifications": {}
        }

## Organization's Child-Organization Collection [/organizations/{id}/organizations{?offset,limit,sortby,desc,details,name,sitecode,search,includearchived}]

This resource represents the list of child organizations for the specified organization

### Retrieve child Organizations [GET]

+ Parameters
    + id (string) ... Id of the parent Organization
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of organization (groups, organizations, students, users)
    + name = `` (optional, string, ``)...Filter results by exact match on `Name` field
    + sitecode = `` (optional, string, ``)...Filter results by exact match on `AuthenticationSiteCode` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `Name` or `AuthenticationSiteCode` fields.
      Multiple search terms may be separated by spaces.
    + includearchived = `false` (optional, bool, `false`)...Return archived organizations in the results (must be an ILAdmin)

+ Response 200 (application/json)

        {
          "metadata": {},
          "groups":
          {
            [{
              "id": "6f587521-1dd4-431d-ad91-4c27c5f32776",
              "organizationType" : "School",
              "name": "Anderton Academy",
              "parentId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "licenseCap": 50,
              "organizationNumber": "",
              "syncId", ""
            }]
          }
          "notifications": {}
        }

## Organization's Groups Collection [/organizations/{id}/groups{?limit,offset,sortby,desc,details,name,sectionname,groupnumber,search}]

This resource represents the list of groups for the specified organization

### Retrieve groups in the Organization [GET]

+ Parameters
    + id (string) ... Id of the Organization
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of group (contained students and owning users)
    + name = `` (optional, string, ``)...Filter results by exact match on `Name` field
    + sectionname = `` (optional, string, ``)...Filter results by exact match on `SectionName` field
    + groupnumber = `` (optional, string, ``)...Filter results by exact match on `GroupNumber` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `Name`, `SectionName`, or `GroupNumber` fields.
      Multiple search terms may be separated by spaces.

+ Response 200 (application/json)

        {
          "metadata": {},
          "groups":
          {
            [{
              "id": "5687fc7a-dccc-45b7-8be5-bf9533e37af3",
              "name": "First Grade",
              "groupType": "ILE",
              "printOption": "All",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }, {
              "id": "0a0b13c0-8315-43f3-bc5a-033d0dd340ac",
              "name": "After School",
              "groupType": "ILS",
              "printOption": "Partial",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }
        

## Organization's Students Collection [/organizations/{orgId}/students/{studentId}{?offset,limit,sortby,desc,details,username,gradelevel,firstname,lastname,search,includearchived}]

This resource represents the list of students in the specified organization.

### Retrieve students in an organization [GET]

NOTE: The results of this call are paginated. Default maximum number of results is 100.
The display starts at offset 0 and limits the display to 10 results per page.

+ Parameters
    + orgId (string) ... Organization Id for which to retrieve students
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Username` (optional, string, `Username`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of student (groups and organizations)
    + username = `` (optional, string, ``)...Filter results by exact match on `Username` field
    + gradelevel = `` (optional, string, ``)...Filter results by exact match on `GradeLevel` field
    + firstname = `` (optional, string, ``)...Filter results by exact match on `FirstName` field
    + lastname = `` (optional, string, ``)...Filter results by exact match on `LastName` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `FirstName`, `LastName`, or `Username` fields.
      Multiple search terms may be separated by spaces.
    + includearchived = `false` (optional, bool, `false`)...Return archived students in the results (must be an ILAdmin)

+ Response 200 (application/json)

        {
          "metadata": {},
          "students":
          {
            [{
              "id": "4176a86d-5ef3-4898-a350-8b80ddc09a49",
              "username": "demostudent@imaginelearning.com",
              "password": "1234",
              "firstName": "Madyson",
              "lastName": "Cram",
              "gender": "Male",
              "gradeLevel": "Second",
              "firstLanguage": "English",
              "writtenLanguage": "English",
              "studentNumber": "",
              "syncId": ""
            }, {
              "id": "3a617f40-4748-4c32-a8c3-5d6282c6842c",
              "username": "demostudent2@imaginelearning.com",
              "password": "5678",
              "firstName": "Matt",
              "lastName": "Lund",
              "gender": "Male",
              "gradeLevel": "PreK",
              "firstLanguage": "Mandarin",
              "writtenLanguage": "Chinese Simplified",                
              "studentNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }

### Add student to a secondary organization [PUT]

+ Parameters
    + orgId (string) ... Organization Id to add Student to
    + studentId (string) ... Student Id being added to Organization

+ Response 202 (application/json)

### Remove student from organization [DELETE]

The student cannot be removed from all organizations.  Call student archive to completely remove a student.

+ Parameters
    + orgId (string) ... Organization Id to remove Student from
    + studentId (string) ... Student Id being removed from Organization

+ Response 202 (application/json)


## Organization's Users Collection [/organizations/{orgId}/users/{userId}{?offset,limit,sortby,desc,details,username,firstname,lastname,search}]

This resource represents the list of users in the specified organization

### Retrieve users in an organization [GET]

+ Parameters
    + orgId (string) ... Organization Id for which to retrieve users
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Username` (optional, string, `Username`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of user (groups and organizations)
    + username = `` (optional, string, ``)...Filter results by exact match on `Username` field
    + firstname = `` (optional, string, ``)...Filter results by exact match on `FirstName` field
    + lastname = `` (optional, string, ``)...Filter results by exact match on `LastName` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `FirstName`, `LastName`, or `Username` fields.
      Multiple search terms may be separated by spaces.

+ Response 200 (application/json)

        {
          "metadata": {},
          "users":
          {
            [{
              "id": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "username": "demouser@imaginelearning.com",
              "firstName": "Susan",
              "lastName": "Preator",
              "userType": "Admin",
              "language": "English",
              "userNumber": "",
              "syncId": ""
            }, {
              "id": "fe33418b-099f-49bf-97c0-85468a791084",
              "username": "demouser@imaginelearning.com",
              "firstName": "Clydie",
              "lastName": "Wakefield",
              "userType": "Teacher"
              "language": "Chinese Traditional",
              "userNumber": "",
              "syncId": ""            
            }
          }
          "notifications": {}
        }

### Add user to a organization [PUT]

+ Parameters
    + orgId (string) ... Organization Id to add User to
    + userId (string) ... User Id being added to Organization

+ Response 202 (application/json)

### Remove user from organization [DELETE]

The user cannot be removed from all organizations.  Call user delete to completely remove a user.

+ Parameters
    + orgId (string) ... Organization Id to remove User from
    + userId (string) ... User Id being removed from Organization

+ Response 202 (application/json)


## Organizations Collection [/organizations{?offset,limit,sortby,desc,details,name,sitecode,search,includearchived}]

This resource is the collection of all Organizations

### List all Organizations [GET]

+ Parameters
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve. If set to -1 returns all available results.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of organization (groups, organizations, students, users)
    + name = `` (optional, string, ``)...Filter results by exact match on `Name` field
    + sitecode = `` (optional, string, ``)...Filter results by exact match on `AuthenticationSiteCode` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `Name` or `AuthenticationSiteCode` fields.
      Multiple search terms may be separated by spaces.
    + includearchived = `false` (optional, bool, `false`)...Return archived organizations in the results (must be an ILAdmin)
    + Ids = `does not exist` (optional, list[string], ``)...HEADER, if set returns only items specified by the id's in the list.

+ Response 200 (application/json)

        {
          "metadata": {},
          "organizations":
          {
            [{
              "id": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "organizationType" : "District",
              "name": "Imagine Learning School District",
              "address": "191 River Park Dr.",
              "city": "Provo",
              "state": "Utah",
              "zip": "84604",
              "country": "USA",
              "parentId": "00000000-0000-0000-0000-000000000000",
              "licenseCap": 100,
              "organizationNumber": "",
              "syncId", ""
            }, {
              "id": "6f587521-1dd4-431d-ad91-4c27c5f32776",
              "organizationType" : "School",
              "name": "Anderton Academy",
              "address": "1100 Samson Trl",
              "city": "McCall",
              "state": "Idaho",
              "zip": "83638",
              "country": "USA",
              "parentId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "licenseCap": 50,
              "organizationNumber": "",
              "syncId", ""
            }
          }
          "notifications": {}
        }


### Create Organization [POST]

| property                    | type    | required | default | notes
|:----------------------------|:-------:|:---:|:-----:|:-----------------------------------------------|
| name                        | string  | Yes |       | Length 1-128 characters
| organizationType            | string  | Yes |       | Valid values: "District", "School", "Other"
| address                     | string  | Yes |       | Length 1-128 characters
| address2                    | string  | No  | null  | Length 1-128 characters
| city                        | string  | Yes |       | Length 1-128 characters
| state                       | string  | Yes |       | Length 1-64 characters
| zip                         | string  | No  | null  | Length 5-10 characters
| country                     | string  | Yes |       | Length 3 characters ([ISO 3166-1 alpha-3 Country Code](https://en.wikipedia.org/wiki/ISO_3166-1))
| parentId                    | string  | Yes |       | Valid Organization Id of parent ("00000000-0000-0000-0000-000000000000" for Imagine Learning)
| licenseCap                  | number  | No  | null  | Empty=No Cap, otherwise Range (0-MAXINT)
| organizationNumber          | string  | No  | null  | Length 1-64 characters
| syncId                      | string  | No  | null  | Length 1-64 characters
| authenticationSiteCode      | string  | No  | null  | Empty=not authentication domain boundary

+ Request (application/json)

        {
          "name" : "Test School District",
          "organizationType" : "School",
          "address": "191 River Park Dr.",
          "city" : "Provo",
          "state": "Utah",
          "zip" : "84604",
          "country": "USA",
          "parentId": "00000000-0000-0000-0000-000000000000"
        }
        
+ Response 201

    [Organization][]
         

+ Response 409
        
        {
          "message" : "The User username already exists"
        }

## Organization's Authentication Site Code [/organizations/{orgId}/authenticationSiteCode]

Retrieves the authentication site code for the authentication domain organization of the specified organization (meaning, if the specified organization doesn't have an authentication site code, it will identify the first organization up the heirarchy with an authentication site code and return that value).

### Retrieve an organization's authentication site code [GET]

+ Parameters
    + orgId (string) ... Organization ID
    
+ Response 200 (application/json)

        {
            "authenticationSiteCode": "MyOrgSiteCode"
        }

## Group [/groups/{id}{?details}]

A Group represents any type of class or other grouping of students.   The resource has the following attributes: 

- `id` (string) Unique Group identifier [Assigned by API when User is created]
- `name` (string) Name of the Group
- `groupType` (string) Type of group: "ILE", "ILS"
- `printOption` (string) "All" printouts, "Partial" printouts, or "None"
- `organizationId` (string) Id of the Organization the group belongs to
- `sectionName` (string) Name of Section [OPTIONAL]
- `groupNumber` (string) Unique district/school id for the group.  [OPTIONAL]
- `syncId` (string) Id used in syncing with SIS [OPTIONAL]


+ Parameters
    + id (string) ... Group Id.

+ Model (application/hal+json)

        {
          "metadata": {},
          "group":
          {
            "id": "5687fc7a-dccc-45b7-8be5-bf9533e37af3",
            "name": "First Grade",
            "groupType": "ILE",
            "printOption": "All",
            "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
            "sectionName": "",
            "groupNumber": "",
            "syncId": ""
          }
          "notifications": {}
        }

### Retrieve a Single Group [GET]
+ Parameters
    + id (string) ... Group Id.
    + details = `false` (optional, bool, `false`)...Return extra details of group (contained students and owning users)

+ Response 200
    
    [Group][]

### Edit a Group [PATCH]
To update a Group send a Patch Request with updated value(s) for one or more of the Group resource attributes. All attributes values (properties) from the previous version are carried over by default if not specified.
+ Request (application/json)

        {
          "attribute_name": "Updated attribute contents"
        }

+ Response 200
    
    [Group][]

### Edit a Group [PUT]
To update a Group send a Put Request with updated value(s) for each of the Group resource attributes. All attributes values (properties) are updated.
+ Response 200
    
        {
          "notifications": {}
        }

### Delete a Group [DELETE]
+ Response 200 (application/json)

        {
          "notifications": {}
        }

## Group's Student Collection [/groups/{groupId}/students/{studentId}{?offset,limit,sortby,desc,details,username,gradelevel,firstname,lastname,search,includearchived}]

This resource represents the list of students in the specified group

### Retrieve students in a group [GET]

+ Parameters
    + groupId (string) ... Group Id for which to retrieve students
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Username` (optional, string, `Username`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of student (groups and organizations)
    + username = `` (optional, string, ``)...Filter results by exact match on `Username` field
    + gradelevel = `` (optional, string, ``)...Filter results by exact match on `GradeLevel` field
    + firstname = `` (optional, string, ``)...Filter results by exact match on `FirstName` field
    + lastname = `` (optional, string, ``)...Filter results by exact match on `LastName` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `FirstName`, `LastName`, or `Username` fields.
      Multiple search terms may be separated by spaces.
    + includearchived = `false` (optional, bool, `false`)...Return archived students in the results (must be an ILAdmin)

+ Response 200 (application/json)

        {
          "metadata": {},
          "students":
          {
            [{
              "id": "4176a86d-5ef3-4898-a350-8b80ddc09a49",
              "username": "demostudent@imaginelearning.com",
              "password": "1234",
              "firstName": "Madyson",
              "lastName": "Cram",
              "gender": "Male",
              "gradeLevel": "Second",
              "firstLanguage": "English",
              "writtenLanguage": "English",
              "studentNumber": "",
              "syncId": ""
            }, {
              "id": "3a617f40-4748-4c32-a8c3-5d6282c6842c",
              "username": "demostudent2@imaginelearning.com",
              "password": "5678",
              "firstName": "Matt",
              "lastName": "Lund",
              "gender": "Male",
              "gradeLevel": "PreK",
              "firstLanguage": "Mandarin",
              "writtenLanguage": "Chinese Simplified",                
              "studentNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }

### Add student to a group [PUT]

+ Parameters
    + groupId (string) ... Group Id to add Student to
    + studentId (string) ... Student Id being added to Group

+ Response 202 (application/json)

### Remove student from group [DELETE]

+ Parameters
    + groupId (string) ... Group Id to remove Student from
    + studentId (string) ... Student Id being removed from Group

+ Response 202 (application/json)


## Group's Users Collection [/groups/{groupId}/users/{userId}{?offset,limit,sortby,desc,details,username,firstname,lastname,search}]

This resource represents the list of users in the specified group

### Retrieve users in a group [GET]

+ Parameters
    + groupId (string) ... Group Id for which to retrieve users
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve.
    + sortby = `Username` (optional, string, `Username`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of user (groups and organizations)
    + username = `` (optional, string, ``)...Filter results by exact match on `Username` field
    + firstname = `` (optional, string, ``)...Filter results by exact match on `FirstName` field
    + lastname = `` (optional, string, ``)...Filter results by exact match on `LastName` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `FirstName`, `LastName`, or `Username` fields.
      Multiple search terms may be separated by spaces.

+ Response 200 (application/json)

        {
          "metadata": {},
          "users":
          {
            [{
              "id": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "username": "demouser@imaginelearning.com",
              "firstName": "Susan",
              "lastName": "Preator",
              "userType": "Admin",
              "language": "English",
              "userNumber": "",
              "syncId": ""
            }, {
              "id": "fe33418b-099f-49bf-97c0-85468a791084",
              "username": "demouser@imaginelearning.com",
              "firstName": "Clydie",
              "lastName": "Wakefield",
              "userType": "Teacher"
              "language": "Chinese Traditional",
              "userNumber": "",
              "syncId": ""            
            }
          }
          "notifications": {}
        }

### Add user to a group [PUT]

+ Parameters
    + groupId (string) ... Group Id to add User to
    + userId (string) ... User Id being added to Group

+ Response 202 (application/json)

### Remove user from group [DELETE]

+ Parameters
    + groupId (string) ... Group Id to remove User from
    + userId (string) ... User Id being removed from Group

+ Response 202 (application/json)
        

## Groups Collection [/groups{?limit,offset,sortby,desc,details,name,sectionname,groupnumber,search}]

This resource is the collection of groups owned by the current user.

### List all Groups for current User [GET]

+ Parameters
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve. If set to -1 returns all available results.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of group (contained students and owning users)
    + name = `` (optional, string, ``)...Filter results by exact match on `Name` field
    + sectionname = `` (optional, string, ``)...Filter results by exact match on `SectionName` field
    + groupnumber = `` (optional, string, ``)...Filter results by exact match on `GroupNumber` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `Name`, `SectionName`, or `GroupNumber` fields.
        Multiple search terms may be separated by spaces.
    + Ids = `does not exist` (optional, list[string], ``)...HEADER, if set returns only items specified by the id's in the list.

+ Response 200 (application/json)

        {
          "metadata": {},
          "groups":
          {
            [{
              "id": "5687fc7a-dccc-45b7-8be5-bf9533e37af3",
              "name": "First Grade",
              "groupType": "ILE",
              "printOption": "All",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }, {
              "id": "0a0b13c0-8315-43f3-bc5a-033d0dd340ac",
              "name": "After School",
              "groupType": "ILS",
              "printOption": "Partial",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }

## Direct Groups Collection [/groups/mine{?limit,offset,sortby,desc,details,name,sectionname,groupnumber,search}]

This resource is the collection of all groups that the authenticated user belongs to.

### List all direct Groups [GET]
+ Parameters
    + offset = `0` (optional, number, `10`)...The number of results to skip
    + limit = `10` (optional, number, `100`)...The maximum number of results to retrieve. If set to -1 returns all available results.
    + sortby = `Name` (optional, string, `Name`)...Sort field for results
    + desc = `false` (optional, bool,   `false`)...Descending sort order of sortby field
    + details = `false` (optional, bool,   `false`)...Return extra details of group (contained students and owning users)
    + name = `` (optional, string, ``)...Filter results by exact match on `Name` field
    + sectionname = `` (optional, string, ``)...Filter results by exact match on `SectionName` field
    + groupnumber = `` (optional, string, ``)...Filter results by exact match on `GroupNumber` field
    + search = `` (optional, string, ``)...Filter results by case insensitive partial match on `Name`, `SectionName`, or `GroupNumber` fields.
        Multiple search terms may be separated by spaces.

+ Response 200 (application/json)

        {
          "metadata": {},
          "groups":
          {
            [{
              "id": "5687fc7a-dccc-45b7-8be5-bf9533e37af3",
              "name": "First Grade",
              "groupType": "ILE",
              "printOption": "All",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }, {
              "id": "0a0b13c0-8315-43f3-bc5a-033d0dd340ac",
              "name": "After School",
              "groupType": "ILS",
              "printOption": "Partial",
              "organizationId": "9fad4cfd-f669-4cc7-a38d-275d033eb7bc",
              "sectionName": "",
              "groupNumber": "",
              "syncId": ""
            }
          }
          "notifications": {}
        }

### Create Group [POST]

| property               | type    | required | default | notes
|:-----------------------|:-------:|:---:|:-----:|:-----------------------------------------------|
| name                   | string  | Yes |       | Length 1-256 characters
| groupType              | string  | Yes |       | Valid values: "ILE", "ILS"
| printOption            | string  | Yes |       | Valid values: "Full", "Partial", "None"
| organizationId         | string  | Yes |       | Valid Organization Id the group belongs to
| sectionName            | string  | No  | null  | Length 1-256 characters
| groupNumber            | string  | No  | null  | Length 1-64 characters
| syncId                 | string  | No  | null  | Length 1-64 characters


+ Request (application/json)

        {
          "name" : "After School",
          "groupType" : "ILE",
          "printOption" : "Full",
          "organizationId" : "9fad4cfd-f669-4cc7-a38d-275d033eb7bc"
        }
        
+ Response 201

    [Group][]
         

+ Response 409
        
        {
          "message" : "The Group name already exists"
        }

# Group Sequencing

## Activity [/activities{?product,productRevision,clientActivitySupport}]

An Activity resource represents the next activity selected for the Student to play

### Get next Activity [GET]

The selectedContent construct in the response instructs the client what should be played:

- `activity` (string): This is the identifier of the activity to be played
- `dataSetNum` (number): Dataset to be played.  Corresponds to DataSet.DataSetNum in the Imagine database.  This is frequently confused with artificial dataset keys.  So to be clear, this is the very same number that the designer would refer to as "dataset 1000", etc.
- `activitySpecificDatas`: (see below): Returns any activity saved data that's previously been stored for this student / product.
- `diagnosticData`: Anything contained here is meant to be used to facilitate dev and qa but should not be consumed by the client for other purposes, without further discussion.

+ Parameters
    + product = `` (required, string, `ILE`)...The unique identifer (or Name) of the Product to run.
    + productRevision = `` (optional, string, `7`)...The revision of the Product to run; for Testing; overrides revision that would typically be identified by the Student's promotion group (e.g. Production, or DevPartner)
    + clientActivitySupport = `` (optional, number, `123456789`)...The hash/Id of the set of supported Activities and DataSets. Omit the value (or use the value 0) to imply client support of all Activities and DataSets known to the server.

+ Response 200 (application/json)

        {
            "selectedContent": {
                "activity": "RecognizeLetters",
                "dataSetNum": 1,
                "activitySpecificDatas": null
            },
            "diagnosticData": {
            "expectedSkillsToBeScored": [
                {
                    "skillId": "Summary_RecognizeLetters",
                    "skillType": "Percentage"
                },
                {
                    "skillId": "A",
                    "skillType": "Mastery"
                },
                {
                    "skillId": "M",
                    "skillType": "Mastery"
                }
                ]
            },
            "testSection": null,
            "reviewMenuEnabledActivitySection": null,
            "recordingDatas": null
        }

+ Response 404 (application/json)

        {
            "message": "No clientActivitySupport with ID = 123456789. Use POST /activities/support"
        }

## Activity [/activities]

### Process completed Activity [PUT]

The content of the PUT is a construct specifying what "activity" and "dataSetNum" was just played, in what "product" (and optional "productRevision") context, "elapsedTime" spent in the activity, and applicable results ("Scores", "TestSectionInstance", etc.)

+ Request (application/json)

        {
            "product": "ILE",
            "completedActivityData": {
                "activity": "RecognizeLetters",
                "dataSetNum": 1,
                "elapsedTime": "00:00:00",
                "scores": [
                {
                    "skill": "Summary_RecognizeLetters",
                    "numPossible": 10,
                    "numCorrect": 0
                },
                {
                    "skill": "A",
                    "mastered": false
                },
                {
                    "skill": "M",
                    "mastered": false
                }
                ]
            }
        }

+ Response 204

### Save Activity progress [POST]

+ Request (application/json)

        {
            "activity": "PreAndPlacementTest",
            "activitySavedDataCollection": [
            {
                "key": "TestData",
                "value": "TestData"
            }
            ]
        }

+ Response 204

## Client Activity Support [/activities/support]

A client may send its set of supported content (Activities and DataSets) such that server-side sequencing logic may determine to not send any activity to the client which it doesn't have the capability to play

# Create Client Activity Support  [POST]

+ Request (application/json)

        {
            "clientActivitySupport": 123456789,
            "supportedActivities": [
            {
                "activity": "AffixAction",
                "supportedDataSetNums": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]
            },
            {
                "activity": "AlphabetQuiz",
                "supportedDataSetNums": [1,2,3,4,5]
            }
            ]
        }

+ Response 201

+ Response 409 (application/json)

        {
            "message": "Supported activities/datasets doesn't match previously POSTed ClientActivtySupport sent with the same hash/ID value: 123456789"
        }

## Client Activity Support data [/activities/support/{clientActivitySupport}]

+ Parameters
    + clientActivitySupport (integer hash) ... value used to create client activity support (POST /activities/support)

# Delete Client Activity Suport data [DELETE]

NOTE: Only the root user is authorized to delete client activity support data from server storage. Normally, we would not ever want to delete client activity support data once created. Typically, only a use case for cleaning up test data would call for deleting client activity support data.

+ Response 204

## Student Sequencing Data [/activities/{id}]

Operations on underlying student data store

+ Parameters
    + id (string) ... Student Id.

# Seed the Student with sample Data [POST]

NOTE: Only ILAdmin users are authorized to seed a student with sample data. Normally student data would be built over the course of natural use of the product. Typically, only tests would call for seeding a student with data.

The POST content is optional. Either supply valid student data (json document) or omit the content to use a server-side pre-built sample. Student data may only be seeded for a new student, i.e. one that does not yet have sequencing data.

+ Request (application/json)

        {
            "_id": "f566a01b-c3dd-47e1-a549-a3a0011b9fc3",
            "Revision": 4,
            "StudentProductStateCollection": [
                {
                    "Product": "ILE",
                    "LastStrandChoiceAlgorithmUsed": "LongestSincePlayed",
                    "NumReviewMenuChoicesMade": 0,
                    "IsOnDemandTestAssigned": false
                }
            ],
            "StudentLessonStateCollection": [
                {
                    "Lesson": "01d6691f-911f-45b5-b861-778c725b4d98",
                    "LessonState": "Satisfied",
                    "SatisfiedReason": "SkippedByGradeLevel",
                    "RowVersion": 0,
                    "AnyBranchEverFailed": false
                },
                {
                    "Lesson": "d17e51fd-a445-47a1-8145-47d35f45af75",
                    "LessonState": "Satisfied",
                    "SatisfiedReason": "SkippedByGradeLevel",
                    "RowVersion": 0,
                    "AnyBranchEverFailed": false
                }
            ],
            "ActivityCountedCollection": [
                {
                    "LessonBranch": "Main",
                    "Activity": "EverydayWordsInScenes",
                    "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                    "SequenceNode": "b7974386-2593-44ed-80ae-938b46233ff7",
                    "DataSet": 1,
                    "DateTime": "2014-09-08T17:12:44.6435162-06:00",
                    "ElapsedSeconds": 150.0
                },
                {
                    "LessonBranch": "Main",
                    "Activity": "RecognizeEverydayWords",
                    "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                    "SequenceNode": "f6ac8dd4-8ca5-4663-bcd4-f7eeade29b29",
                    "DataSet": 1,
                    "DateTime": "2014-09-08T17:12:46.442246-06:00",
                    "ElapsedSeconds": 150.0,
                    "Scores": [
                        {
                            "Activity": "RecognizeEverydayWords",
                            "DataSet": 1,
                            "Skill": "Summary_RecognizeEverydayWords",
                            "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                            "LessonBranch": "Main",
                            "ActivityNode": "f6ac8dd4-8ca5-4663-bcd4-f7eeade29b29",
                            "DateTime": "2014-09-08T17:12:46.442246-06:00",
                            "NumPossible": 3,
                            "NumCorrect": 1,
                            "Mastered": false,
                            "QuestionResponses": [
                                {
                                    "QuestionNumber": 1,
                                    "ResponseNumber": 1,
                                    "AttemptNumber": 1,
                                    "ProductVersion": "1.0.0.0"
                                },
                                {
                                    "QuestionNumber": 2,
                                    "ResponseNumber": 2,
                                    "AttemptNumber": 2,
                                    "ProductVersion": "1.0.0.0"
                                },
                                {
                                    "QuestionNumber": 3,
                                    "ResponseNumber": 3,
                                    "AttemptNumber": 3,
                                    "ProductVersion": "1.0.0.0"
                                }
                            ]
                        },
                        {
                            "Activity": "RecognizeEverydayWords",
                            "DataSet": 1,
                            "Skill": "bird",
                            "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                            "LessonBranch": "Main",
                            "ActivityNode": "f6ac8dd4-8ca5-4663-bcd4-f7eeade29b29",
                            "DateTime": "2014-09-08T17:12:46.442246-06:00",
                            "NumPossible": 0,
                            "NumCorrect": 0,
                            "Mastered": false
                        }
                    ]
                }
            ],
            "ActivitySavedDataCollection": [
                {
                    "Activity": "ThemeSong",
                    "VariableName": "TestData",
                    "Value": "TestData"
                },
                {
                    "Activity": "TimeToRead",
                    "VariableName": "InfoText_ScaffoldingLevel",
                    "Value": "NOT_SET"
                }
            ],
            "StudentLessonStateHistoryV2Collection": [
                {
                    "ActivatedRevision": 0,
                    "AnyBranchEverFailed": false,
                    "CurrentBranch": "",
                    "LastBranch": "",
                    "Lesson": "01d6691f-911f-45b5-b861-778c725b4d98",
                    "LessonState": "Satisfied",
                    "PendingBranchOutcome": "",
                    "SatisfiedReason": "SkippedByGradeLevel",
                    "LessonStateTransitionReason": "SkippingBasedOnGrade",
                    "DateTime": "2014-09-08T17:12:39.7157042-06:00"
                },
                {
                    "ActivatedRevision": 0,
                    "AnyBranchEverFailed": false,
                    "CurrentBranch": "",
                    "LastBranch": "",
                    "Lesson": "d17e51fd-a445-47a1-8145-47d35f45af75",
                    "LessonState": "Satisfied",
                    "PendingBranchOutcome": "",
                    "SatisfiedReason": "SkippedByGradeLevel",
                    "LessonStateTransitionReason": "SkippingBasedOnGrade",
                    "DateTime": "2014-09-08T17:12:39.7157042-06:00"
                }
            ],
            "TestInstances": [
                {
                    "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                    "LessonBranch": "Main",
                    "TestType": "Pretest",
                    "TimeStarted": "2014-09-08T17:12:44.0948972-06:00",
                    "TimeCompleted": "2014-09-08T17:12:44.3662592-06:00",
                    "TestInstanceId": "1",
                    "TestSectionInstances": [
                        {
                            "TestSection": "Basic Vocab 1-5",
                            "TestQuestionInstances": [
                                {
                                    "TestQuestion": "q157",
                                    "TimeStarted": "2014-09-08T17:12:44.2952474-06:00",
                                    "TimeCompleted": "2014-09-08T17:12:44.2952474-06:00",
                                    "TestOptionInstances": [
                                        {
                                            "ClickCount": 1,
                                            "IsSelected": false,
                                            "ResponseLatency": 5,
                                            "TestOption": "opt729"
                                        },
                                        {
                                            "ClickCount": 1,
                                            "IsSelected": true,
                                            "ResponseLatency": 5,
                                            "TestOption": "opt730"
                                        },
                                        {
                                            "ClickCount": 1,
                                            "IsSelected": false,
                                            "ResponseLatency": 5,
                                            "TestOption": "opt731"
                                        },
                                        {
                                            "ClickCount": 1,
                                            "IsSelected": false,
                                            "ResponseLatency": 5,
                                            "TestOption": "opt732"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "MdtPredictionValidationCollection": [
                {
                    "PredictionValidationFrequency": 20.0,
                    "MdtPredictionParameters": "GradeID Second, SectionID 39: QID51(0.689895470383,0.310104529617,0.6,0.4);QID52(0.852233676975,0.147766323025,0.6,0.4);QID53(0.90243902439,0.09756097561,0.444444444444,0.555555555556);QID54(0.923875432525,0.076124567475,0.65,0.35);QID58(0.973118279569,0.026881720431,0.153846153846,0.846153846154);QID61(0.844290657439,0.155709342561,0.6,0.4);QID62(0.585365853658,0.414634146342,0.5,0.5);",
                    "DateTime": "2014-09-08T17:12:44.0908968-06:00",
                    "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                    "SequenceNode": "3a6b0d0e-9ab3-484b-b768-92e0a51d2f53",
                    "TestSection": "Basic Vocab 1-5",
                    "MdtPredictionResultType": "UncertainForcedValidation",
                    "GradeLevel": "Second"
                }
            ]
        }
        
+ Response 201

# Get the Student's Current Data [GET]

NOTE: Only ILAdmin users are authorized to get student data. Typically, only tests would call to archiving data with which to seed a student with data later.

+ Response 404 (application/json)

        {
            "message": "No student data exists for student with id = f566a01b-c3dd-47e1-a549-a3a0011b9fc3"
        }
        
+ Response 200 (application/json)

        {
            "_id": "f566a01b-c3dd-47e1-a549-a3a0011b9fc3",
            "Revision": 4,
            "StudentProductStateCollection": [
                {
                    "Product": "ILE",
                    "LastStrandChoiceAlgorithmUsed": "LongestSincePlayed",
                    "NumReviewMenuChoicesMade": 0,
                    "IsOnDemandTestAssigned": false
                }
            ],
            "StudentLessonStateCollection": [
                {
                    "Lesson": "01d6691f-911f-45b5-b861-778c725b4d98",
                    "LessonState": "Satisfied",
                    "SatisfiedReason": "SkippedByGradeLevel",
                    "RowVersion": 0,
                    "AnyBranchEverFailed": false
                },
                {
                    "Lesson": "d17e51fd-a445-47a1-8145-47d35f45af75",
                    "LessonState": "Satisfied",
                    "SatisfiedReason": "SkippedByGradeLevel",
                    "RowVersion": 0,
                    "AnyBranchEverFailed": false
                }
            ],
            "ActivityCountedCollection": [
                {
                    "LessonBranch": "Main",
                    "Activity": "EverydayWordsInScenes",
                    "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                    "SequenceNode": "b7974386-2593-44ed-80ae-938b46233ff7",
                    "DataSet": 1,
                    "DateTime": "2014-09-08T17:12:44.6435162-06:00",
                    "ElapsedSeconds": 150.0
                },
                {
                    "LessonBranch": "Main",
                    "Activity": "RecognizeEverydayWords",
                    "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                    "SequenceNode": "f6ac8dd4-8ca5-4663-bcd4-f7eeade29b29",
                    "DataSet": 1,
                    "DateTime": "2014-09-08T17:12:46.442246-06:00",
                    "ElapsedSeconds": 150.0,
                    "Scores": [
                        {
                            "Activity": "RecognizeEverydayWords",
                            "DataSet": 1,
                            "Skill": "Summary_RecognizeEverydayWords",
                            "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                            "LessonBranch": "Main",
                            "ActivityNode": "f6ac8dd4-8ca5-4663-bcd4-f7eeade29b29",
                            "DateTime": "2014-09-08T17:12:46.442246-06:00",
                            "NumPossible": 3,
                            "NumCorrect": 1,
                            "Mastered": false,
                            "QuestionResponses": [
                                {
                                    "QuestionNumber": 1,
                                    "ResponseNumber": 1,
                                    "AttemptNumber": 1,
                                    "ProductVersion": "1.0.0.0"
                                },
                                {
                                    "QuestionNumber": 2,
                                    "ResponseNumber": 2,
                                    "AttemptNumber": 2,
                                    "ProductVersion": "1.0.0.0"
                                },
                                {
                                    "QuestionNumber": 3,
                                    "ResponseNumber": 3,
                                    "AttemptNumber": 3,
                                    "ProductVersion": "1.0.0.0"
                                }
                            ]
                        },
                        {
                            "Activity": "RecognizeEverydayWords",
                            "DataSet": 1,
                            "Skill": "bird",
                            "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                            "LessonBranch": "Main",
                            "ActivityNode": "f6ac8dd4-8ca5-4663-bcd4-f7eeade29b29",
                            "DateTime": "2014-09-08T17:12:46.442246-06:00",
                            "NumPossible": 0,
                            "NumCorrect": 0,
                            "Mastered": false
                        }
                    ]
                }
            ],
            "ActivitySavedDataCollection": [
                {
                    "Activity": "ThemeSong",
                    "VariableName": "TestData",
                    "Value": "TestData"
                },
                {
                    "Activity": "TimeToRead",
                    "VariableName": "InfoText_ScaffoldingLevel",
                    "Value": "NOT_SET"
                }
            ],
            "StudentLessonStateHistoryV2Collection": [
                {
                    "ActivatedRevision": 0,
                    "AnyBranchEverFailed": false,
                    "CurrentBranch": "",
                    "LastBranch": "",
                    "Lesson": "01d6691f-911f-45b5-b861-778c725b4d98",
                    "LessonState": "Satisfied",
                    "PendingBranchOutcome": "",
                    "SatisfiedReason": "SkippedByGradeLevel",
                    "LessonStateTransitionReason": "SkippingBasedOnGrade",
                    "DateTime": "2014-09-08T17:12:39.7157042-06:00"
                },
                {
                    "ActivatedRevision": 0,
                    "AnyBranchEverFailed": false,
                    "CurrentBranch": "",
                    "LastBranch": "",
                    "Lesson": "d17e51fd-a445-47a1-8145-47d35f45af75",
                    "LessonState": "Satisfied",
                    "PendingBranchOutcome": "",
                    "SatisfiedReason": "SkippedByGradeLevel",
                    "LessonStateTransitionReason": "SkippingBasedOnGrade",
                    "DateTime": "2014-09-08T17:12:39.7157042-06:00"
                }
            ],
            "TestInstances": [
                {
                    "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                    "LessonBranch": "Main",
                    "TestType": "Pretest",
                    "TimeStarted": "2014-09-08T17:12:44.0948972-06:00",
                    "TimeCompleted": "2014-09-08T17:12:44.3662592-06:00",
                    "TestInstanceId": "1",
                    "TestSectionInstances": [
                        {
                            "TestSection": "Basic Vocab 1-5",
                            "TestQuestionInstances": [
                                {
                                    "TestQuestion": "q157",
                                    "TimeStarted": "2014-09-08T17:12:44.2952474-06:00",
                                    "TimeCompleted": "2014-09-08T17:12:44.2952474-06:00",
                                    "TestOptionInstances": [
                                        {
                                            "ClickCount": 1,
                                            "IsSelected": false,
                                            "ResponseLatency": 5,
                                            "TestOption": "opt729"
                                        },
                                        {
                                            "ClickCount": 1,
                                            "IsSelected": true,
                                            "ResponseLatency": 5,
                                            "TestOption": "opt730"
                                        },
                                        {
                                            "ClickCount": 1,
                                            "IsSelected": false,
                                            "ResponseLatency": 5,
                                            "TestOption": "opt731"
                                        },
                                        {
                                            "ClickCount": 1,
                                            "IsSelected": false,
                                            "ResponseLatency": 5,
                                            "TestOption": "opt732"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "MdtPredictionValidationCollection": [
                {
                    "PredictionValidationFrequency": 20.0,
                    "MdtPredictionParameters": "GradeID Second, SectionID 39: QID51(0.689895470383,0.310104529617,0.6,0.4);QID52(0.852233676975,0.147766323025,0.6,0.4);QID53(0.90243902439,0.09756097561,0.444444444444,0.555555555556);QID54(0.923875432525,0.076124567475,0.65,0.35);QID58(0.973118279569,0.026881720431,0.153846153846,0.846153846154);QID61(0.844290657439,0.155709342561,0.6,0.4);QID62(0.585365853658,0.414634146342,0.5,0.5);",
                    "DateTime": "2014-09-08T17:12:44.0908968-06:00",
                    "Lesson": "c3fe8440-1676-4147-8888-83ed059d9771",
                    "SequenceNode": "3a6b0d0e-9ab3-484b-b768-92e0a51d2f53",
                    "TestSection": "Basic Vocab 1-5",
                    "MdtPredictionResultType": "UncertainForcedValidation",
                    "GradeLevel": "Second"
                }
            ]
        }
        
# Delete Student Data [DELETE]

NOTE: Only ILAdmin users are authorized to delete student data. We normally want to keep student data around forever. Typically, only a use case for cleaning up test data would call for deleting student data.

Should be performed BEFORE deleting the Student itself via management/provisioning API's (DELETE /students/{id})

+ Response 204

## Recordings Metadata [/activities/recordings]

Student recordings made in some activities

# Store Recordings Metadata [POST]

The content is a construct specifying what "activity" and "dataSetNum" made the recordings, in what "product" (and optional "productRevision") context, and a "name" for each of "recordingDatas". The response is a construct including server-assigned "recordingIds" in "recordingDatas" order.

+ Request (application/json)

        {
            "product": "ILE",
            "activity": "DecodableBooks",
            "dataSetNum": 1,
            "recordingDatas": [
                {
                    "name": "TestRecording"
                }
            ]
        }

+ Response 201 (application/json)

        {
            "recordingIds": [
                "8ef75a2f-92c8-4996-98d2-2d6122f137c3"
            ]
        }
        
## Recordings List [/activities/recordings/list/{studentId}{?activities}]

+ Parameters
    + studentId (string) ... List recordings for the studtent matching this Id
    + activities (string, optional) ... Comma separated list of activity names to limit the recordings returned
    
# List Recordings [GET]

+ Response 200 (application/json)

        [
            {
                "month": 9,
                "year": 2012,
                "recordings": [
                    {
                        "name": "Hickory Dickory Dock",
                        "id": "61ed14ef-5f03-46cb-8038-e0d99f1c4eed",
                        "activity": "BeARecordingArtist",
                        "dataset": 8,
                        "date": "2012-09-07T10:37:09.44-06:00"
                    },
                    {
                        "name": "Hickory Dickory Dock",
                        "id": "1afea433-22ee-45d0-84ff-66288b28a23b",
                        "activity": "BeARecordingArtist",
                        "dataset": 8,
                        "date": "2012-09-07T10:42:35.36-06:00"
                    }
                ]
            },
            {
                "month": 6,
                "year": 2012,
                "recordings": [
                    {
                        "name": "Your Turn to Talk - Please",
                        "id": "22c9f667-0076-427f-84b4-8a4d57158dff",
                        "activity": "YourTurnToTalk",
                        "dataset": 4,
                        "date": "2012-06-04T12:17:36.65-06:00"
                    },
                    {
                        "name": "Your Turn to Talk - Thank you",
                        "id": "5ff9d67f-a70b-4dd1-8980-dfe2343c780b",
                        "activity": "YourTurnToTalk",
                        "dataset": 4,
                        "date": "2012-06-04T12:17:36.65-06:00"
                    },
                    {
                        "name": "Your Turn to Talk - You're welcome",
                        "id": "6518ffdb-7804-421a-a71d-3ce90d80c396",
                        "activity": "YourTurnToTalk",
                        "dataset": 4,
                        "date": "2012-06-04T12:17:36.66-06:00"
                    },
                    {
                        "name": "Good Morning, Good Night",
                        "id": "98d35468-072c-466c-8e79-fc6ae22b979f",
                        "activity": "BeARecordingArtist",
                        "dataset": 4,
                        "date": "2012-06-06T12:06:53.99-06:00"
                    },
                    {
                        "name": "Good Morning, Good Night",
                        "id": "dd25c298-075a-4395-a27b-1a4ee96dad7f",
                        "activity": "BeARecordingArtist",
                        "dataset": 4,
                        "date": "2012-06-07T11:58:43.42-06:00"
                    },
                    {
                        "name": "Your Turn to Talk - What's your name?",
                        "id": "31d97b5d-cd0e-4a9d-8a9d-b0144b408d44",
                        "activity": "YourTurnToTalk",
                        "dataset": 5,
                        "date": "2012-06-11T12:06:55.19-06:00"
                    },
                    {
                        "name": "Days of the Week",
                        "id": "8c306a2c-7de9-4553-8ca3-e856b8d098ca",
                        "activity": "BeARecordingArtist",
                        "dataset": 5,
                        "date": "2012-06-13T12:08:21.42-06:00"
                    },
                    {
                        "name": "Days of the Week",
                        "id": "0a79e114-ed86-4c87-b20f-393268b19be1",
                        "activity": "BeARecordingArtist",
                        "dataset": 5,
                        "date": "2012-06-13T12:11:43.46-06:00"
                    },
                    {
                        "name": "Your Turn to Talk - Where is it?",
                        "id": "6298f293-ef26-4c5b-b2dd-8563e2e6a216",
                        "activity": "YourTurnToTalk",
                        "dataset": 6,
                        "date": "2012-06-14T12:13:03.2-06:00"
                    },
                    {
                        "name": "Your Turn to Talk - Here it is",
                        "id": "d44fbffd-d55c-4568-976e-e343f6d0ad3e",
                        "activity": "YourTurnToTalk",
                        "dataset": 6,
                        "date": "2012-06-14T12:13:03.2-06:00"
                    },
                    {
                        "name": "Colors",
                        "id": "2fad707d-37f3-48e8-8f15-b5777b031bf9",
                        "activity": "BeARecordingArtist",
                        "dataset": 6,
                        "date": "2012-06-18T12:16:29.1-06:00"
                    },
                    {
                        "name": "Colors",
                        "id": "7a5faa8c-9edb-45aa-9b85-ef3a0d55574f",
                        "activity": "BeARecordingArtist",
                        "dataset": 6,
                        "date": "2012-06-18T12:20:22.58-06:00"
                    },
                    {
                        "name": "Your Turn to Talk - I like it",
                        "id": "c2b0336f-ede5-4e04-8f76-b275df48fb0d",
                        "activity": "YourTurnToTalk",
                        "dataset": 7,
                        "date": "2012-06-19T12:11:25.68-06:00"
                    },
                    {
                        "name": "Your Turn to Talk - I don't like it",
                        "id": "e564de56-30d3-4b38-9ced-708ef0b93b27",
                        "activity": "YourTurnToTalk",
                        "dataset": 7,
                        "date": "2012-06-19T12:11:25.68-06:00"
                    },
                    {
                        "name": "Buckle My Shoe",
                        "id": "18dbda09-4110-4c4d-8403-9d194f216fdf",
                        "activity": "BeARecordingArtist",
                        "dataset": 7,
                        "date": "2012-06-21T12:21:11.15-06:00"
                    },
                    {
                        "name": "Buckle My Shoe",
                        "id": "95be50c1-5df3-4635-ab18-23796ce84c5d",
                        "activity": "BeARecordingArtist",
                        "dataset": 7,
                        "date": "2012-06-25T11:59:13.58-06:00"
                    },
                    {
                        "name": "Your Turn to Talk - I don't understand",
                        "id": "8e26d2f9-f360-4016-b33a-caa717cacd45",
                        "activity": "YourTurnToTalk",
                        "dataset": 8,
                        "date": "2012-06-26T12:21:15.46-06:00"
                    }
                ]
            }
        ]

## Recordings Bytes [/activities/recordings/{id}]

+ Parameters
    + id (string) ... Server-assigned recording id, returned in response to store recordings metadata [POST /activities/recordings].

# Store Recording Bytes [PUT]

+ Request (application/octect-stream)

+ Response 201

# Get Recording Bytes [GET]

+ Request (application/octect-stream)

+ Response 200 (application/octect-stream)

# Delete Recording Bytes [DELETE]

NOTE: Only the root user is authorized to delete student recordings. We normally want to keep student recordings around forever. Typically, only a use case for cleaning up test data would call for deleting student recordings.

+ Response 204

# Group Runtime

## Logs Collection [/logs]

This resource is the collection of all diagnostic logs that the authenticated user has rights to.

### Create diagnostic log entry [POST]

| property | type | required | default | notes
|:-----------------------|:-------:|:---:|:-----:|:-----------------------------------------------|
| reporterApplication | string | Yes | |
| reporterComponent | string | Yes | |
| message | string | Yes | |
| details | string | No | |
| logCreationTimestamp | date | Yes | | UTC date-time, not local
| context | string | No | | TODO - I want this to be an array of string-string

+ Request (application/json)

        {
          "reporterApplication" : "ILE Unity",
          "reporterComponent": "Imagine.ILE.Activities.RecognizeLetters",
          "message": "System.ApplicationException: Error in the application.",
          "details" : "at ConsoleApplication13.Program.Main(String[] args) in c:\Users\Matthew\Documents\Visual Studio 2013\Projects\Consolelication13\ConsoleApplication13\Program.cs:line 13",
          "logCreationTimestamp": "2014-05-06T15:05:03.0238299Z"
        }
        
+ Response 202

# Group Student Data

## Get Value [/studentData/{key}]

Provides a simples key/value store for string data

+ Parameters
    + key (string) ... The key counterpart for your value

### Get a value for a key [GET]

+ Response 200 (text/plain)

        100000
        
### Set a value for a key [PUT]

+ Request (text/plain)
    
        testValue

+ Response 202 

        <no content>
        
### Delete a value for a key [DELETE]

+ Response 204 

# Group Client Settings

## Get Settings with Sitecode [/settings?sitecode={sitecode}&version={version}&platform={platform}]

Get client settings (mediaservers, CachingMode, etc) from the server, no authentication required.

+ Parameters
    + sitecode (string) ... The site code the client devices has been configured to use
    + version (string, optional) ... The version of the client (1.0.33.10992)
    + platform (string, optional) ... The platform of the client devices (iOS, Android, Windows, etc)

### Get settings with Sitecode [GET]

+ Response 200 (application/json)

        {
            "mediaservers": [
                {
                    "priority": 1,
                    "urls": ["http://10.10.50.28:8080/media", "http://10.10.50.10:8080/media"]
                }
            ],
            "CachingMode": "PreCache",
            "DebugLogging" : false
        }  
        
+ Response 204
    
## Get Settings with token [/settings?token={token}&version={version}&platform={platform}]

Get client settings (mediaservers, precache option, etc) from the server.

+ Parameters
    + token (string) ... The authorization token of the logged in student
    + version (string, optional) ... The version of the client (1.0.33.10992)
    + platform (string, optional) ... The platform of the client devices (iOS, Android, Windows, etc)

### Get settings with token [GET]

+ Response 200 (application/json)

        {
            "mediaservers": [
                {
                    "priority": 1,
                    "urls": ["http://10.10.50.28:8080/media", "http://10.10.50.10:8080/media"]
                }
            ],
            "CachingMode": "PreCache",
            "debugLogging" : false
        }    
        
+ Response 204

## Get Settings Configuration [/organizations/{id}/settings]

Get the list of settings for an organization for viewing/editing by an administrator

+ Parameters
    + id (string) ... The id of the organization


### Get settings [GET]

+ Response 200 (application/json)

        {
            "mediaservers": [
                {
                    "priority": 1,
                    "ids": ["ff72258d-8244-4d3f-975a-cca5e78e23bc","32ae40bc-6a65-41cd-a02b-3bc0b4f9d49b"]
                }
            ],
            "CachingMode": "PreCache"
        }

+ Response 204

### Update settings [PUT]

+ Request 

        {
            "mediaservers": [
                {
                    "priority": 1,
                    "ids": ["ff72258d-8244-4d3f-975a-cca5e78e23bc","32ae40bc-6a65-41cd-a02b-3bc0b4f9d49b"]
                }
            ],
            "CachingMode": "PreCache"
        }

+ Response 202

### Update some settings [PATCH]

+ Request 

        {
            "CachingMode": "PreCache"
        }

+ Response 202

## Get Media Servers for sitecode [/mediaservers?sitecode={sitecode}]

Get broadcasting media servers that are registered to the given sitecode.

+ Parameters
    + sitecode (string) ... The site code to search for

### Get media servers with sitecode [GET]

+ Response 200 (application/json)

        [
            {
                "id":"ff72258d-8244-4d3f-975a-cca5e78e23bc",
                "urls":["http://10.10.50.28/media"],
                "name":"TESTCDN",
                "lastContact":"2015-04-14T13:20:12Z"
            },
            {
                "id":"32ae40bc-6a65-41cd-a02b-3bc0b4f9d49b",
                "urls":["http://10.10.50.10:8080/media","http://169.254.75.39:8080/media"],
                "name":"0315-107284-01",
                "lastContact":"2015-04-14T12:56:35Z"
            }
        ]

# Group License Management

## License agreement collection [/organizations/{organization}/licenses]

List or add license agreements for a specific organization

### Get license agreements [GET]

+ Response 200 (application/json)

        [
            { 
                "id": "0d0429b4-9f6e-4e57-97c4-103ff9d42f32",
                "quantity": 100, 
                "start": "2014-08-01T00:00:00Z", 
                "end": "2015-7-31T00:00:00Z", 
                "description": "Title 3 licenses with grant money",
                "available": 0,
                "reservations" : [
                    { "id": "28b564bf-8195-440e-b214-d69000d51fb9", "quantity": 25},
                    { "id": "f72d4a96-a915-4cdf-a68a-7169cfc74293", "quantity": 40}
                ]
            },
            { 
                "id": "db1e20af-66f5-498f-8f38-4b7c64c348ed",
                "quantity": 50, 
                "start": "2015-01-01T00:00:00Z", 
                "end": "2015-12-31T00:00:00Z", 
                "description": "Bonus licenses for being a Super School"},
                "available" : 25,
                "unusedData": "some data"
        ]

### Create a new license agreement [POST]

Only the client_id=License can create new license agreements.

| property               | type    | required | default | notes
|:-----------------------|:-------:|:---:|:-----:|:-----------------------------------------------|
| quantity               | int     | Yes |       | The number of student licenses (or "site" for site licenses)
| start                  | date    | Yes |       | The start date
| end                    | date    | Yes |       | The end date
| description            | string  | No  |       | A description of the license agreement for the user
| reservations           | array   | No  |       | Allocations of licenses to specific child organizations
| [additional fields]    |         | No  |       | Any additional fields will be stored, but not validated by the server

+ Request

        { 
                "quantity": 10, 
                "start": "2015-01-01T00:00:00Z", 
                "end": "2015-3-31T00:00:00Z", 
                "description": "Demo licenses for 3 month pilot",
                "extraInfo": "special data",
                "reservations" : [
                    { "id": "28b564bf-8195-440e-b214-d69000d51fb9", "quantity": 5},
                    { "id": "f72d4a96-a915-4cdf-a68a-7169cfc74293", "quantity": 5}
                ]
        }

+ Response 204

## Specific License Agreement [/organizations/{organization}/licenses/{license}]

### Get specific license agreement [GET]

| property               | type    | required | default | notes
|:-----------------------|:-------:|:---:|:-----:|:-----------------------------------------------|
| quantity               | int     | Yes |       | The number of student licenses (or "site" for site licenses)
| start                  | date    | Yes |       | The start date
| end                    | date    | Yes |       | The end date
| description            | string  | No  |       | A description of the license agreement for the user
| used                   | int     | Yes |       | The number of licenses in use
| reservations           | array   | No  |       | Allocations of licenses to specific child organizations
| [additional fields]    |         | No  |       | Any additional fields will be stored, but not validated by the server

+ Response 200 (application/json)

        
        { 
            "id": "0d0429b4-9f6e-4e57-97c4-103ff9d42f32",
            "quantity": 100, 
            "start": "2014-08-01T00:00:00Z", 
            "end": "2015-7-31T00:00:00Z", 
            "description": "Title 3 licenses with grant money",
            "used": 12,
            "reservations" : [
                { "id": "28b564bf-8195-440e-b214-d69000d51fb9", "quantity": 25},
                { "id": "f72d4a96-a915-4cdf-a68a-7169cfc74293", "quantity": 40}
            ],
            "extraData": "extra stuff"
        }
    

### Update a license agreement [PATCH]

id, quantity, start, end and description can only be updated by the client_id License.  'used' can never be updated.

+ Request (application/json)

        { 
            "reservations" : [
                { "id": "28b564bf-8195-440e-b214-d69000d51fb9", "quantity": 5}
            ],
            "extraData": "different stuff"
        }

+ Response 204

### Delete a license agreement [DELETE]

+ Response 204